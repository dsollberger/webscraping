geom_dotplot() +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "count") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(flipper_length, na.rm), color = "red") +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(flipper_length_mm, na.rm), color = "red") +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(flipper_length_mm, na.rm), color = "red") +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(flipper_length_mm, na.rm = TRUE), color = "red") +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "red") +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "red") +
geom_vline(xintercept = median(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "blue") +
labs(title = "Flipper Lengths of Gentoo Penguins",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot() +
geom_vline(xintercept = mean(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "red") +
geom_vline(xintercept = median(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "blue") +
labs(title = "Flipper Lengths of Gentoo Penguins",
subtitle = "mean in red, median in blue",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
View(Gentoo_df)
names(Gentoo_df)
baby_Gentoo <- data.frame(species = "Gentoo", island = "Biscoe",
bill_length_mm = NA, bill_depth_mm = NA,
flipper_length_mm = 25, body_mass_g = NA,
sex = NA)
baby_Gentoo <- data.frame(species = "Gentoo", island = "Biscoe",
bill_length_mm = NA, bill_depth_mm = NA,
flipper_length_mm = 25, body_mass_g = NA,
sex = NA)
Gentoo_df_with_outlier <- rbind(Gentoo_df, baby_Gentoo)
Gentoo_df_with_outlier %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot(binwidth = 1) +
geom_vline(xintercept = mean(Gentoo_df_with_outlier$flipper_length_mm, na.rm = TRUE), color = "red") +
geom_vline(xintercept = median(Gentoo_df_with_outlier$flipper_length_mm, na.rm = TRUE), color = "blue") +
labs(title = "Flipper Lengths (with outlier)",
subtitle = "mean in red, median in blue",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
Gentoo_df %>%
ggplot(aes(x = flipper_length_mm)) +
geom_dotplot(binwidth = 1) +
geom_vline(xintercept = mean(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "red") +
geom_vline(xintercept = median(Gentoo_df$flipper_length_mm, na.rm = TRUE), color = "blue") +
labs(title = "Flipper Lengths of Gentoo Penguins",
subtitle = "mean in red, median in blue",
caption = "Source: Palmer Penguins data set",
x = "flipper length (in mm)",
y = "proportion") +
theme_minimal()
mean(Gentoo_df$flipper_length_mm, na.rm = TRUE) - mean(Gentoo_df_with_outlier$flipper_length_mm, na.rm = TRUE)
mean(Gentoo_df$flipper_length_mm, na.rm = TRUE) - mean(Gentoo_df_with_outlier$flipper_length_mm, na.rm = TRUE)
median(Gentoo_df$flipper_length_mm, na.rm = TRUE) - median(Gentoo_df_with_outlier$flipper_length_mm, na.rm = TRUE)
crops <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-19/crops.csv')
households <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-19/households.csv')
View(crops)
View(households)
View(crops)
View(households)
View(crops)
View(crops)
View(households)
library("tidyverse")
crops <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-19/crops.csv')
households <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-19/households.csv')
View(crops)
mean(crops$Farming, na.rm = TRUE)
median(crops$Farming, na.rm = TRUE)
min(crops$Farming, na.rm = TRUE)
max(crops$Farming, na.rm = TRUE)
View(households)
mean(households$Population, na.rm = TRUE)
median(households$Population, na.rm = TRUE)
min(households$Population, na.rm = TRUE)
max(households$Population, na.rm = TRUE)
View(households)
plastics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-26/plastics.csv')
View(plastics)
mean(plastics$ldpe, na.rm = TRUE)
median(plastics$ldpe, na.rm = TRUE)
min(plastics$ldpe, na.rm = TRUE)
max(plastics$ldpe, na.rm = TRUE)
mean(plastics$hdpe, na.rm = TRUE)
median(plastics$hdpe, na.rm = TRUE)
min(plastics$hdpe, na.rm = TRUE)
max(plastics$hdpe, na.rm = TRUE)
plastics %>%
group_by(country) %>%
summarize(mean = mean(hdpe, na.rm = TRUE),
median = median(hdpe, na.rm = TRUE),
sd = sd(hdpe, na.rm = TRUE))
install.packages("learnr")
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
fives <- 5:100:5
fives <- seq(5, 100, 5)
X <- data.frame(x = seq(1, 100))
library("titanic")
install.packageS("titanic")
install.packages("titanic")
library("titanic")
head(titanic_train)
library(tidyverse)
unlink('C:/Users/Public/Dropbox/UC Merced/Math 32 (2021 Spring)/LearnR homework/Math32LearnR1/Math32LearnR1_cache', recursive = TRUE)
devtools::install_github("rstudio/packrat")
blackpast <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-16/blackpast.csv')
census <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-16/census.csv')
slave_routes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-16/slave_routes.csv')
african_names <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-16/african_names.csv')
View(slave_routes)
View(census)
View(african_names)
View(blackpast)
View(census)
View(slave_routes)
View(blackpast)
sum(seq(600, 1400, 100))
9000*2500
Q <- seq(800, 1700, 100)
sum(seq(800, 1600, 100))
sum(seq(800, 1600, 100))*2500
seq(800, 1700, 100)
sum(seq(800, 1700, 100))
sum(seq(800, 1700, 100))*2500
library("titanic")
titanic_train %>% count(Survived)
library("tidyverse")
titanic_train %>% count(Survived)
8*90/12
11*80/12
10!
factorial(10)
library("kableExtra")
library("rtweet")
library("rvest")
library("tidyverse")
ucm10k <- get_timeline("ucmerced", n = 10000)
setwd("~/GitHub/webscraping")
write.csv(ucm10k, "ucm3ktweets.csv")
View(ucm10k)
ucm3k <- apply(ucm10k, 2, as.character)
write.csv(ucm3k, "ucm3ktweets.csv")
str(ucm3k, give.attr = FALSE)
str(ucm10k, give.attr = FALSE)
tibble_with_lists_to_csv <- function(tibble_object, file_path_name) {
set_lists_to_chars <- function(x) {
if(class(x) == 'list') { y <- paste(unlist(x[1]), sep='', collapse=', ') } else { y <- x  }
return(y) }
new_frame <- data.frame(lapply(tibble_object, set_lists_to_chars), stringsAsFactors = F)
write.csv(new_frame, file=file_path_name)
}
tibble_with_lists_to_csv(ucm10k, "ucm3k.csv")
tibble_with_lists_to_csv(ucm10k, "ucm3ktweets.csv")
maintainer(rvest)
library(rvest)
maintainer(rvest)
maintainer("rvest")
# the read_html() function literally loads the HTML code of a webpage
raw_library_HTML <- read_html("http://library.ucmerced.edu/about/contact/staff")
raw_library_HTML
raw_library_HTML[2]
library_page_nodes <- raw_library_HTML %>% html_nodes("div")
head(library_page_nodes)
employees <- raw_library_HTML %>%
html_nodes("div.views-field-title") %>%
html_text(trim = TRUE)
head(employees)
job_titles <- raw_library_HTML %>%
html_nodes("div.views-field-field-job-title") %>%
html_text(trim = TRUE)
contact <- raw_library_HTML %>%
html_nodes("div.views-field-field-email") %>%
html_text(trim = TRUE)
library_df <- data.frame(employees, job_titles, contact)
head(library_df)
library_df %>%
kbl() %>%
kable_paper("hover", full_width = FALSE)
e-mail-list <- collapse(contact, ";")
e-mail-list <- paste(contact, ";")
email_list <- paste(contact, ";")
write_lines(email_list, "email_list.txt")
ranking_table <- wikipedia_page_tables[[5]] %>% html_table(fill = TRUE)
wikipedia_page_tables <- raw_wikipedia_HTML %>% html_nodes("table")
raw_wikipedia_HTML <- read_html("https://en.wikipedia.org/wiki/University_of_California")
wikipedia_page_tables <- raw_wikipedia_HTML %>% html_nodes("table")
ranking_table <- wikipedia_page_tables[[5]] %>% html_table(fill = TRUE)
ranking_table
ranking_table <- wikipedia_page_tables[[5]] %>% html_table()
ranking_table <- wikipedia_page_tables[[5]] %>% html_table(fill = TRUE)
ranking_table
ranking_table %>%
slice(2:n()) %>% #skips first row
kbl() %>%
kable_material(c("striped", "hover"))
colnames(ranking_table)
ranking_table %>%
slice(2:n()) %>% #skips first row
kbl() %>%
kable_paper("hover", full_width = F)
ranking_table %>%
# slice(2:n()) %>% #skips first row
kbl() %>%
kable_paper("hover", full_width = F)
ranking_table %>%
row_to_names(row_number = 1) %>%
kbl() %>%
kable_paper("hover", full_width = F)
library("janitor")    #assists cleaning column names
install.packages("janitor")
library("janitor")    #assists cleaning column names
ranking_table %>%
row_to_names(row_number = 1) %>%
kbl() %>%
kable_paper("hover", full_width = F)
ranking_table %>%
row_to_names(row_number = 1) %>%
kbl() %>%
kable_material(c("striped", "hover"))
ranking_table %>%
row_to_names(row_number = 1) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover"))
ranking_table %>%
row_to_names(row_number = 1) %>%
kbl() %>%
kable_minimal()
ranking_table %>%
row_to_names(row_number = 1) %>%
kbl() %>%
kable_minimal(full_width = TRUE)
ranking_table %>%
kbl() %>%
kable_minimal(full_width = TRUE)
maintainer(rtweet)
maintainer("rtweet")
maintainer("rvest")
tweet_df <- search_tweets("#ucmerced", n = 1000, include_rts = FALSE)
View(tweet_df)
tweet_df <- search_tweets("#ucmerced", n = 100, include_rts = FALSE)
tweet_df %>% count(screen_name)
?count
tweet_df %>% count(screen_name, sort = TRUE)
# https://mobile.twitter.com/ucmerced
ucm_following <- get_friends("ucmerced")
ucm_following_data <- lookup_users(ucm_following$user_id)
View(ucm_following_data)
user1_followers <- get_followers("ucmerced")
user2_followers <- get_followers("ucdavis")
mutual_followers <- intersect(user1_followers, user2_followers)
mutual_followers_data <- lookup_users(mutual_followers$user_id)
View(mutual_followers_data)
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv")
#ucm_timeline <- get_timeline("ucmerced", n = 10000)
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv")
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv")
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv", encoding ='latin1')
?read_csv
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read.csv("ucm3ktweets.csv", sep=";", encoding = "UTF-8")
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv")
View(ucm_timeline)
ucm_timeline %>%
select(created_at) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
Encoding[ucm_timeline$text] <- "UTF-8"
Encoding[ucm_timeline[[text]]] <- "UTF-8"
Encoding(ucm_timeline$text) <- "UTF-8"
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
install.packages(utf8)
install.packages("utf8")
library("utf8")
utf8_encode(ucm_timeline$text)
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv")
ucm_timeline$text<- utf8_encode(ucm_timeline$text)
ucm_timeline %>%
select(created_at, text) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
search_term <- "Munoz"
ucm_timeline %>%
filter(str_detect(text, search_term)) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
ucm_timeline$text<- utf8_encode(ucm_timeline$text)
search_term <- "Munoz"
ucm_timeline %>%
filter(str_detect(text, search_term)) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
search_term <- utf8_encode("Munoz")
ucm_timeline %>%
filter(str_detect(text, search_term)) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
ucm_timeline %>%
select(created_at, text) %>%
slice(1:10) %>%
kbl(caption = "ucmerced account recent tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
search_term <- "Munoz"
ucm_timeline %>%
filter(str_detect(text, search_term))
search_term <- "Munoz"
ucm_timeline %>%
select(created_at, text) %>%
filter(str_detect(text, search_term)) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
ucm_timeline %>%
select(favorite_count, created_at, text) %>%
arrange(desc(favorite_count)) %>%
kbl(caption = "ucmerced account tweets") %>%
kable_classic(full_width = TRUE, html_font = "Cambria")
tweet_df <- search_tweets("#BlackinMath", n = 1000)
?ts_plot
tweet_df %>%
ts_plot()
tweet_df %>%
ts_plot() %>%
labs(title = "#BlackInMath",
subtitle = "hashtag trend (2021)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
tweet_df %>%
ts_plot() +
labs(title = "#BlackInMath",
subtitle = "hashtag trend (2021)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
tweet_df <- search_tweets("#BlackHistoryMonth", n = 1000)
tweet_df %>%
ts_plot() +
labs(title = "#BlackHistoryMonth",
subtitle = "hashtag trend (2021)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
tweet_df <- search_tweets("#BlackinMath", n = 1000)
tweet_df2 <- search_tweets("#BlackHistoryMonth", n = 1000)
tweet_df2 %>%
ts_plot(by = "hours") +
labs(title = "#BlackHistoryMonth",
subtitle = "hashtag trend (2021)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
View(tweet_df2)
tweet_df2 %>%
ts_plot(by = "mins") +
labs(title = "#BlackHistoryMonth",
subtitle = "hashtag trend (2021)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
library("janitor")    #assists cleaning column names
library("kableExtra") #produces tables with better aesthetics
library("rtweet")     #connection to Twitter API
library("rvest")      #wrappers for web scraping
library("tidyverse")  #database query tools (e.g. filter) and the magrittr pipe (%>%)
library("utf8")       #needed to ensure that some tweets were machine readable
tweet_df <- search_tweets("#ucmerced", n = 100, include_rts = FALSE)
View(tweet_df)
tweet_df %>% count(screen_name, sort = TRUE)
# https://mobile.twitter.com/ucmerced
ucm_following <- get_friends("ucmerced")
View(ucm_following)
ucm_following_data <- lookup_users(ucm_following$user_id)
View(ucm_following_data)
user1_followers <- get_followers("ucmerced")
user2_followers <- get_followers("ucdavis")
mutual_followers <- intersect(user1_followers, user2_followers)
mutual_followers_data <- lookup_users(mutual_followers$user_id)
View(mutual_followers_data)
# ucm_timeline <- get_timeline("ucmerced", n = 10000)
# for workshop practicality, I loaded this information in advance
# into a data frame for later use
ucm_timeline <- read_csv("ucm3ktweets.csv")
ucm_timeline$text<- utf8_encode(ucm_timeline$text)
tweet_df <- search_tweets("#BlackinMath", n = 1000)
tweet_df %>%
ts_plot() +
labs(title = "#BlackInMath",
subtitle = "hashtag trend (2021)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
tweet_df2 <- search_tweets("#BlackHistoryMonth", n = 1000)
tweet_df2 %>%
ts_plot(by = "mins") +
labs(title = "#BlackHistoryMonth",
subtitle = "hashtag trend (2021-02-12)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
tweet_df2 %>%
ts_plot(by = "mins") +
labs(title = "#BlackHistoryMonth",
subtitle = "hashtag trend (2021-02-12)",
caption = "UC Merced",
x = "date",
y = "count") +
theme_minimal()
